{"pageProps":{"blogData":[{"id":"zk85gkgtz","createdAt":"2022-03-24T10:19:00.827Z","updatedAt":"2022-03-24T10:19:00.827Z","publishedAt":"2022-02-14T10:19:00.000Z","revisedAt":"2022-03-24T10:19:00.827Z","title":"anime.jsのタイムラインでアニメーション管理","body":"<h2 id=\"h8d027c8ed3\">はじめに</h2><p>最近はたいていの動きをCSSアニメーションで実装できて便利ですね。<br>しかしちょこっとのアニメなら良いですが、CSSのみでは複数のアニメーションを管理しづらいです。何秒後にこれが走ってその前にあれとそれが・・など管理するのは大変ですし、そこに他のJSも任意のタイミングで動かしたいときた日には発狂してしまいます。<br>そこでanime.jsというライブラリを使ってみました。</p><h2 id=\"h93ce967be6\">anime.jsとは</h2><p>anime.jsは</p><ul><li>jQuery不要</li><li>IE11サポート</li><li>CSS/DOM/SVG/JavaScriptオブジェクト対応</li><li>MITライセンス（商用利用可）</li><li>軽量（anime.min.jsが17.3KB）</li></ul><p>な定番ライブラリです。</p><h3 id=\"h773980ed2b\">実装方法の比較</h3><p>他のライブラリも検討したのですが、今回やりたいことは</p><ol><li>動作はCSSアニメーションだけで作れるレベル</li><li>複数のアニメーションを管理したい</li><li>アニメーション中にJS発火を仕込みたい</li></ol><p>だったので、この条件で考えてみました。</p><ul><li>jQuery (87.4KB)</li><li>$.animate()で作れますが、アニメーションのためにわざわざ入れる必要はないと思います。</li><li><a style=\"color:#258fb8\" href=\"http://velocityjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Velocity.js</a>&nbsp;(47.5KB)</li><li>jQueryの$.animate()と同じAPIが使えます。jQueryに慣れてる人は良いかもしれない。</li><li><a style=\"color:#258fb8\" href=\"https://greensock.com/gsap/\" target=\"_blank\" rel=\"noopener noreferrer\">GSAP</a>&nbsp;(61.9KB)</li><li>海外でよく使われているらしい。大量のオブジェクトを動かしたいなどより重い/高度な処理をしたいときに向いてそうです。</li><li><a style=\"color:#258fb8\" href=\"https://developer.mozilla.org/ja/docs/Web/API/Web_Animations_API\" target=\"_blank\" rel=\"noopener noreferrer\">Web Animation API</a></li><li>ライブラリではなく、アニメーションの標準仕様です。ただしまだ草案。</li></ul><p>最初はWeb Animation APIを使って、ライブラリなしでイケるならやってみたいなと思い試してみました。<br>かなり直感的に書けるしやりたいこともできて、Polyfillを使えばIE11でも問題なく動作した！のですが、、、<br>自動的にアニメーションを発火させたかったところ、iOSではどこかをタップしないと動き出さなかったりどうにも動作が安定せず・・採用は見送りました😂可能性は感じましたけども!<br>で最終的にファイルサイズや動作の安定性を考えてanime.jsにしました。<br>（いいかもと思ったけどちゃんと調べてないのもある・・<a style=\"color:#258fb8\" href=\"https://github.com/mojs/mojs\" target=\"_blank\" rel=\"noopener noreferrer\">Mo.js</a>&nbsp;/&nbsp;<a style=\"color:#258fb8\" href=\"https://github.com/popmotion/popmotion\" target=\"_blank\" rel=\"noopener noreferrer\">Popmotion</a>&nbsp;/&nbsp;<a style=\"color:#258fb8\" href=\"https://github.com/thednp/kute.js/\" target=\"_blank\" rel=\"noopener noreferrer\">Kute.js</a>）</p><h2 id=\"h4d849f4362\">使い方</h2><p>書き方はとてもシンプルで</p><pre><code>anime({\n  targets: '.hoge',\n  translateX: 250\n});</code></pre><p>とするだけで、指定したクラスの要素を横に移動することができます。<br><a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/#cssSelector\" target=\"_blank\" rel=\"noopener noreferrer\">TARGETS - CSS SELECTOR</a><br><code>targets</code>はNodeListでも良いので、複数要素を一気に動かしたいときは<code>targets: el.querySelectorAll('.hoge')</code>などでもイケます。<br><a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/#domNode\" target=\"_blank\" rel=\"noopener noreferrer\">TARGETS - DOM NODE / NODELIST</a><br>ただ正直この程度だったらCSSだけで十分ですよね。</p><h3 id=\"hd5e98f1c89\">Timeline</h3><p>複数アニメーションを管理したいときは<a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/#timelineBasics\" target=\"_blank\" rel=\"noopener noreferrer\">Timeline</a>という機能が便利です。<br>4つのdiv（四角）が順々に移動するタイムラインを作ってみました。</p><iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2F1dku2378%2Fembedded%2F&display_name=jsFiddle&url=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2F1dku2378%2F&image=https%3A%2F%2Fwww.gravatar.com%2Favatar%2Fa431425883e0e635dd395d98a814918d%3Fs%3D80&key=94335756f04b424b8ce3ce71cbe3de0a&type=text%2Fhtml&schema=jsfiddle\" width=\"600\" height=\"400\" scrolling=\"no\" title=\"jsFiddle embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"></iframe><p><br><span style=\"color:#555555\">まず最初に</span></p><pre><code>const squareAnime = anime.timeline({\n  duration: 800,\n  easing: 'easeInOutElastic',\n  direction: 'alternate',\n  loop: true,\n});</code></pre><p>のようにタイムラインを作ります。 オプションを一括で設定でき、durationやeasingはそれぞれのアニメーションで上書きもできます。<br>各アニメーションは</p><pre><code>squareAnime\n  .add({\n    targets: '.square1',\n    translateY: '400%',\n  })\n  .add({\n    targets: '.square2',\n    translateX: '900%',\n  })</code></pre><p>のように<code>.add</code>で繋げていきます。 タイムラインのパラメータを上書きしたいときは</p><pre><code>.add({\n  targets: '.hoge',\n  easing: 'linear'\n})</code></pre><p>とすればOKです。<br>また単純に連続で実行するだけでなく、同時に実行したり遅延させたりしたいときは<a href=\"https://animejs.com/documentation/#timelineOffsets\" target=\"_blank\" rel=\"noopener noreferrer\">タイムオフセット</a>という機能を使います。&nbsp;<code>.add</code>のオプションとして使用できます。</p><pre><code>.add({\n  targets: '.hoge',\n  translateY: 100,\n  duration: 500,\n})\n.add({\n  targets: '.fuga',\n  translateY: 100,\n}, '-=500')</code></pre><p><code>-=500</code>は前のアニメーションが終了する500ms前に開始するという意味です。 前のアニメーション（<code>.hoge</code>）は500msかけて実行されるので、<code>.hoge</code>と<code>.fuga</code>は同時に実行されることになります。 逆に遅延させたい場合は<code>+=</code>と記述します。</p><h3 id=\"h9be390a8f8\">Callback</h3><p>このアニメーションが終わったらjsを発火させたい、というときのために アニメーションが始まった/終わった/ループした などのタイミングで呼び出される<a href=\"https://animejs.com/documentation/#update\" target=\"_blank\" rel=\"noopener noreferrer\">コールバック</a>が用意されています。<br>先ほどのアニメーションに手を加え、ループのたびにSVGアニメが発動するようにしてみました。</p><iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fj48eq6bg%2Fembedded%2F&display_name=jsFiddle&url=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fj48eq6bg%2F&image=https%3A%2F%2Fwww.gravatar.com%2Favatar%2Fa431425883e0e635dd395d98a814918d%3Fs%3D80&key=94335756f04b424b8ce3ce71cbe3de0a&type=text%2Fhtml&schema=jsfiddle\" width=\"600\" height=\"400\" scrolling=\"no\" title=\"jsFiddle embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"></iframe><p><br>タイムラインに<code>loopComplete()</code>を設定し、ループが終わるたびにアニメーションを動かすjsを呼び出すように設定しました。<br>タイムライン全体が始まったとき/終わったときに動かしたい場合はこれで良いのですが、<code>.add</code>していった各アニメーションが動くタイミングで何かをしたいときもあると思います。 その場合は</p><pre><code>hogeAnimation\n  .add({\n    targets: '.hoge',\n    opacity: 1,\n    begin: function() {\n      console.log('.hoge実行前');\n    },\n    complete: function() {\n      console.log('.hoge実行完了');\n    }\n  })</code></pre><p>のように書くことで実装できます。 サンプルのように他のJSを発動させたり、CSSアニメーションのために<code>will-change</code>を設定しておいて、アニメーションが終わったら<code>auto</code>に戻したりするのに使えます。</p><pre><code>// $hogeが要素だとして、初期スタイルでwill-changeを設定しておく\n$hoge.style.willChange = 'opacity transform';\n\n// アニメーションが済んだらautoに戻しておく\n// ～タイムラインの記述省略～\n.add({\n  targets: $hoge,\n  opacity: 1,\n  scaleY: 1,\n  complete: function() {\n    $hoge.style.willChange = 'auto';\n  }\n})</code></pre><h2 id=\"hcbec2bf0d9\"><br>終わりに</h2><p>タイムラインを使えば直感的かつ簡単にアニメーションを管理できてたのしかったです😁&nbsp;今回は使いませんでしたが、SVGのラインアニメーションやタイムラインの再生/停止などもいじれるので、いろんな活用方法がありそうです。<br>たまに、CSSとJS両方で同じプロパティを指定すると思い通りに動かないことがあったので（durationとかopacityの値とか）、 もしうまくいかなかったら設定はJSだけでやるなど試してみてください。<br>以上です！</p><h2 id=\"h3de35099b3\"><br>参考</h2><p><a href=\"https://animejs.com/documentation/\" target=\"_blank\" rel=\"noopener noreferrer\">Documentation | anime.js</a>&nbsp;<a href=\"https://tr.you84815.space/animejs/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">anime.jsドキュメント翻訳 | anime.js - にほんご。</a>&nbsp;<a href=\"https://ics.media/entry/14973/\" target=\"_blank\" rel=\"noopener noreferrer\">現場で使えるアニメーション系JSライブラリまとめ（2020年版） - GSAP, CreateJS, WebAnimation, Velocityなど - ICS MEDIA</a>&nbsp;<a href=\"https://qiita.com/baby-degu/items/2516bb55e97de612118b\" target=\"_blank\" rel=\"noopener noreferrer\">2019年注目のJavaScriptアニメーションライブラリ11選 - Qiita</a><br></p>","category":{"id":"javascript","createdAt":"2022-03-24T07:10:27.304Z","updatedAt":"2022-03-24T07:10:27.304Z","publishedAt":"2022-03-24T07:10:27.304Z","revisedAt":"2022-03-24T07:10:27.304Z","name":"JavaScript"},"tag":[]},{"id":"31apigdy1nas","createdAt":"2022-03-24T10:06:24.313Z","updatedAt":"2022-03-24T10:07:38.835Z","publishedAt":"2022-02-10T10:06:24.000Z","revisedAt":"2022-03-24T10:07:38.835Z","title":"anime.jsでスムーズスクロール実装","body":"<p>わざわざスムーズスクロールをanime.jsで実装する必要はないのですが、もともとanime.jsを組み込んでいたのでスクロールのために他のライブラリ入れるのはなーと思い実装してみました。<br></p><iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fk0rxob5d%2Fembedded%2F&display_name=jsFiddle&url=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fk0rxob5d%2F&image=https%3A%2F%2Fwww.gravatar.com%2Favatar%2Fa431425883e0e635dd395d98a814918d%3Fs%3D80&key=94335756f04b424b8ce3ce71cbe3de0a&type=text%2Fhtml&schema=jsfiddle\" width=\"600\" height=\"400\" scrolling=\"no\" title=\"jsFiddle embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"></iframe><p><br>※埋め込みだと高さがいじれなくてスクロールがちゃんと見られないので、動作は右上のEdit in JSFiddleから飛んで見てください・・m(<em> </em>)m<br><br>ページの一番上に移動する分には、scrollTopという箇所に0を設定するだけでいいので楽です。<br>しかし、指定した要素に飛ぶという機能はどうやら無いようで、そこだけ自分で設定するのがちょっと面倒でした。<br>とはいえjQueryいらずで、イージングやdurationの指定がとてもかんたんで便利でした:smile:<br><br>参考<br><a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/\" target=\"_blank\" rel=\"noopener noreferrer\">Documentation | anime.js</a><br><a style=\"color:#258fb8\" href=\"https://github.com/juliangarnier/anime/issues/197\" target=\"_blank\" rel=\"noopener noreferrer\">Scroll document to element? · Issue #197 · juliangarnier/anime</a><br><a style=\"color:#258fb8\" href=\"https://tr.you84815.space/animejs/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">anime.jsドキュメント翻訳 | anime.js - にほんご。</a></p>","category":{"id":"javascript","createdAt":"2022-03-24T07:10:27.304Z","updatedAt":"2022-03-24T07:10:27.304Z","publishedAt":"2022-03-24T07:10:27.304Z","revisedAt":"2022-03-24T07:10:27.304Z","name":"JavaScript"},"tag":[]},{"id":"8x7jop3axr","createdAt":"2022-03-24T10:31:39.146Z","updatedAt":"2022-03-24T10:31:39.146Z","publishedAt":"2022-01-21T10:31:39.000Z","revisedAt":"2022-03-24T10:31:39.146Z","title":"Vueでディープセレクタ効かないとき","body":"<h2 id=\"h8b8109e931\">ディープセレクタ</h2><p><code>.hoge[data-v-123456] .fuga[data-v-123456]</code>&nbsp;ではなく&nbsp;<code>.hoge[data-v-123456] .fuga</code>&nbsp;と指定したいときはディープセレクタが便利です。 外部モジュールを操作したいときなどにあるある～です。</p><h2 id=\"h5c0c7cb22e\"><br>問題</h2><p>公式に書いてある</p><pre><code>.hoge /deep/ .fuga\n.hoge &gt;&gt;&gt; .fuga</code></pre><p>が効きませんでした（Sassだったからかも）。</p><h2 id=\"heae49c81e4\"><br>解決</h2><p><code>.hoge ::v-deep .fuga</code>&nbsp;でいけました。<br>vue-loaderの日本語のガイドを見てて、そんなの書いてなくない？？と思い調べたところ、 英語版の方には書いてありました(ﾟ∀ﾟ;)</p><h2 id=\"h3de35099b3\"><br>参考</h2><p><a href=\"https://vue-loader-v14.vuejs.org/ja/features/scoped-css.html\" target=\"_blank\" rel=\"noopener noreferrer\">スコープ付き CSS · vue-loader</a>&nbsp;<a href=\"https://vue-loader.vuejs.org/guide/scoped-css.html#deep-selectors\" target=\"_blank\" rel=\"noopener noreferrer\">Scoped CSS | Vue Loader</a></p>","category":{"id":"javascript","createdAt":"2022-03-24T07:10:27.304Z","updatedAt":"2022-03-24T07:10:27.304Z","publishedAt":"2022-03-24T07:10:27.304Z","revisedAt":"2022-03-24T07:10:27.304Z","name":"JavaScript"},"tag":[{"id":"vuejs","createdAt":"2022-03-24T09:58:41.032Z","updatedAt":"2022-03-24T09:58:41.032Z","publishedAt":"2022-03-24T09:58:41.032Z","revisedAt":"2022-03-24T09:58:41.032Z","name":"Vue.js"}]},{"id":"knjoxmqe02","createdAt":"2022-03-24T10:20:06.688Z","updatedAt":"2022-03-24T10:20:06.688Z","publishedAt":"2021-12-22T10:20:06.000Z","revisedAt":"2022-03-24T10:20:06.688Z","title":"Nuxtにpugとstylus入れようとしたらエラー出た","body":"<h2 id=\"h5c0c7cb22e\">問題</h2><p>新しくNuxtプロジェクト作ろうとしたとき、</p><pre><code>$ npm init nuxt-app myApp\n$ cd myApp\n$ npm i -D pug pug-plain-loader\n$ npm i -D stylus stylus-loader\n$ npm run dev</code></pre><p>これでpugとstylus書いてみたらエラー出て悲しみでした😂<br>どちらも原因はバージョンで、 pugは現時点で最新版が3.0.2だったのですが、pug-plain-loaderが未対応だったのでエラーが出ました。 最新版はアンインストールして、2.0.4を入れたらイケました。<br>stylusは、stylus-loaderの最新版5.0.0がwebpack5系を要求していてエラーが出ました。 （このときNuxtに入ってたのはwebpack 4.46.0でした） こちらも最新版をアンインストールして4.3.3を入れたらイケました。</p><h2 id=\"heae49c81e4\"><br>解決</h2><p>結局やりなおして、</p><pre><code>$ npm init nuxt-app myApp\n$ cd myApp\n$ npm i -D pug@2.0.4 pug-plain-loader\n$ npm i -D stylus stylus-loader@4.3.3\n$ npm run dev</code></pre><p>これで始められました。 前はイケたのになーってこと結構あるので、引っかかったらバージョン確認大事ですね。</p><h2 id=\"h397e38daae\"><br>補足</h2><p>直接関係はないですが、Stylusの変数定義用ファイル読み込みたくて&nbsp;<code>@nuxtjs/style-resources</code>&nbsp;使ったところ&nbsp;<code>ValidationError: Invalid options object. Stylus Loader has been initialized using an options object that does not match the API schema.</code>&nbsp;とエラー出て、調べたら解決策がstylus-loader3系にする だったので結局stylus-loader@3.0.2入れ直しました┐(´д｀)┌</p><h2 id=\"h3de35099b3\"><br>参考</h2><p><a href=\"https://www.npmjs.com/package/pug\" target=\"_blank\" rel=\"noopener noreferrer\">pug - npm</a>&nbsp;<a href=\"https://www.npmjs.com/package/stylus-loader\" target=\"_blank\" rel=\"noopener noreferrer\">stylus-loader - npm</a></p>","category":{"id":"javascript","createdAt":"2022-03-24T07:10:27.304Z","updatedAt":"2022-03-24T07:10:27.304Z","publishedAt":"2022-03-24T07:10:27.304Z","revisedAt":"2022-03-24T07:10:27.304Z","name":"JavaScript"},"tag":[{"id":"nuxtjs","createdAt":"2022-03-24T09:58:57.359Z","updatedAt":"2022-03-24T09:58:57.359Z","publishedAt":"2022-03-24T09:58:57.359Z","revisedAt":"2022-03-24T09:58:57.359Z","name":"Nuxt.js"}]}],"totalCount":4},"__N_SSG":true}