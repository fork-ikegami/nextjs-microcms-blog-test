{"pageProps":{"blogData":[{"id":"asil5qvxa","createdAt":"2022-03-28T10:25:48.286Z","updatedAt":"2022-03-30T05:26:43.079Z","publishedAt":"2022-03-30T05:26:43.079Z","revisedAt":"2022-03-30T05:26:43.079Z","title":"テスト記事","body":"<h1 id=\"h12cf4dda91\">test title</h1><p>text text text</p>","category":{"id":"random-notes","createdAt":"2022-03-24T09:57:09.225Z","updatedAt":"2022-03-24T09:57:09.225Z","publishedAt":"2022-03-24T09:57:09.225Z","revisedAt":"2022-03-24T09:57:09.225Z","name":"雑記"},"tag":[]},{"id":"m4qnmjr7rbi","createdAt":"2022-03-24T10:37:24.846Z","updatedAt":"2022-03-24T10:37:24.846Z","publishedAt":"2022-03-07T10:37:24.000Z","revisedAt":"2022-03-24T10:37:24.846Z","title":"gtagで複数のGoogleアナリティクスプロパティを設定する（GA4とUAどっちも書く）","body":"<h2 id=\"h5c0c7cb22e\">問題</h2><p>すでにGoogle AnalyticsのGlobal site tag（gtag）が埋め込まれているサイトで、新たにGA4のタグを追加してほしいと言われたので、調べてみました。</p><h2 id=\"h001d82110c\"><br>GA4とは</h2><blockquote>GA4は2020年10月にリリースされた新しいバージョンで、4番目のGoogleアナリティクスなので「Google Analytics 4（GA4）」とGoogleが名付けたそうです。 （正確には「Google Analytics for 4 プロパティ」のようです。） by&nbsp;<a href=\"https://weble.tokyo/blogs/ga4/1534/\" target=\"_blank\" rel=\"noopener noreferrer\">【GA4とUAを両方導入しよう】2021年版！初心者でもできるGoogleアナリティクスの導入方法 – WEBLE</a></blockquote><p>へ～ 計測・解析の面では結構機能が異なるようなのですが、埋め込む側としては見慣れたUAの後発って捉えておけば良さそうです。</p><h2 id=\"hd970156c24\"><br>対応</h2><p>たとえば UA-11111-1とG-22222を入れたい場合</p><pre><code>  &lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;\n  &lt;script async src=\"https://www.googletagmanager.com/gtag/js?id=UA-11111-1\"&gt;&lt;/script&gt;\n  &lt;script&gt;\n    window.dataLayer = window.dataLayer || [];\n    function gtag() {\n      dataLayer.push(arguments);\n    }\n    gtag('js', new Date());\n    gtag('config', 'UA-11111-1');\n    gtag('config', 'G-22222');\n  &lt;/script&gt;</code></pre><p>これだけで大丈夫でした。 また、2行目の id= に入れるのはUA-でもG-でも大丈夫のようです。柔軟。<br>このとき、自分で計測データを見ていたわけではないので確実ではないのですが、&nbsp;<code>&lt;/head&gt;</code>の直前に置いていたときは動かず、Googleの指定通り<code>&lt;head&gt;</code>直後に置いたら動きました。</p><h2 id=\"h3de35099b3\"><br>参考</h2><p><a href=\"https://developers.google.com/analytics/devguides/collection/ga4/basic-tag?hl=ja&amp;technology=gtagjs\" target=\"_blank\" rel=\"noopener noreferrer\">ユニバーサル アナリティクスと Google アナリティクス 4 プロパティ用にタグを設定する方法 | Google Developers</a>&nbsp;<a href=\"https://developers.google.com/analytics/devguides/collection/ga4?hl=ja#add_an_additional_google_analytics_property_to_an_existing_tag\" target=\"_blank\" rel=\"noopener noreferrer\">既存のタグに Google アナリティクス プロパティを追加する</a>&nbsp;<a href=\"https://support.google.com/analytics/answer/10271001?hl=ja\" target=\"_blank\" rel=\"noopener noreferrer\">[GA4] analytics.js 実装のアップグレード</a>&nbsp;<a href=\"https://weble.tokyo/blogs/ga4/1534/\" target=\"_blank\" rel=\"noopener noreferrer\">【GA4とUAを両方導入しよう】2021年版！初心者でもできるGoogleアナリティクスの導入方法</a></p>","category":{"id":"web","createdAt":"2022-03-24T07:11:35.245Z","updatedAt":"2022-03-24T07:11:35.245Z","publishedAt":"2022-03-24T07:11:35.245Z","revisedAt":"2022-03-24T07:11:35.245Z","name":"Web全般"},"tag":[{"id":"google-analytics","createdAt":"2022-03-24T10:36:26.389Z","updatedAt":"2022-03-24T10:36:26.389Z","publishedAt":"2022-03-24T10:36:26.389Z","revisedAt":"2022-03-24T10:36:26.389Z","name":"GA"},{"id":"gtag","createdAt":"2022-03-24T10:36:41.527Z","updatedAt":"2022-03-24T10:36:41.527Z","publishedAt":"2022-03-24T10:36:41.527Z","revisedAt":"2022-03-24T10:36:41.527Z","name":"gtag"},{"id":"ga4","createdAt":"2022-03-24T10:36:53.897Z","updatedAt":"2022-03-24T10:36:53.897Z","publishedAt":"2022-03-24T10:36:53.897Z","revisedAt":"2022-03-24T10:36:53.897Z","name":"GA4"}]},{"id":"bksplxco9hzx","createdAt":"2022-03-24T10:35:04.947Z","updatedAt":"2022-03-24T10:35:04.947Z","publishedAt":"2022-02-21T10:35:04.000Z","revisedAt":"2022-03-24T10:35:04.947Z","title":"Firebase HostingにBasic認証かけるときのFunctionsはasia-northeast1じゃダメだった","body":"<p>リージョンは近い方が良いと聞いたことがあったので、開発のFunctionsをマネして東京リージョンにしたら hostingしたサイトにアクセスした際エラーになってしまいました。</p><blockquote>重要: HTTP 関数を使用して Firebase Hosting の動的コンテンツを提供する場合は、us-central1 を使用する必要があります。 by&nbsp;<a href=\"https://firebase.google.com/docs/functions/locations?hl=ja#http_and_client-callable_functions\" target=\"_blank\" rel=\"noopener noreferrer\">Cloud Functions のロケーション | Firebase</a></blockquote><p>デフォルトでリージョンは&nbsp;<code>us-central1</code>&nbsp;になるうえ、FunctionsでHostingするケースも少ないかと思うので、 とくにいじらなければ引っかからない箇所かと思います😂</p>","category":{"id":"web","createdAt":"2022-03-24T07:11:35.245Z","updatedAt":"2022-03-24T07:11:35.245Z","publishedAt":"2022-03-24T07:11:35.245Z","revisedAt":"2022-03-24T07:11:35.245Z","name":"Web全般"},"tag":[{"id":"firebase","createdAt":"2022-03-24T10:34:32.220Z","updatedAt":"2022-03-24T10:34:32.220Z","publishedAt":"2022-03-24T10:34:32.220Z","revisedAt":"2022-03-24T10:34:32.220Z","name":"Firebase"}]},{"id":"zk85gkgtz","createdAt":"2022-03-24T10:19:00.827Z","updatedAt":"2022-03-24T10:19:00.827Z","publishedAt":"2022-02-14T10:19:00.000Z","revisedAt":"2022-03-24T10:19:00.827Z","title":"anime.jsのタイムラインでアニメーション管理","body":"<h2 id=\"h8d027c8ed3\">はじめに</h2><p>最近はたいていの動きをCSSアニメーションで実装できて便利ですね。<br>しかしちょこっとのアニメなら良いですが、CSSのみでは複数のアニメーションを管理しづらいです。何秒後にこれが走ってその前にあれとそれが・・など管理するのは大変ですし、そこに他のJSも任意のタイミングで動かしたいときた日には発狂してしまいます。<br>そこでanime.jsというライブラリを使ってみました。</p><h2 id=\"h93ce967be6\">anime.jsとは</h2><p>anime.jsは</p><ul><li>jQuery不要</li><li>IE11サポート</li><li>CSS/DOM/SVG/JavaScriptオブジェクト対応</li><li>MITライセンス（商用利用可）</li><li>軽量（anime.min.jsが17.3KB）</li></ul><p>な定番ライブラリです。</p><h3 id=\"h773980ed2b\">実装方法の比較</h3><p>他のライブラリも検討したのですが、今回やりたいことは</p><ol><li>動作はCSSアニメーションだけで作れるレベル</li><li>複数のアニメーションを管理したい</li><li>アニメーション中にJS発火を仕込みたい</li></ol><p>だったので、この条件で考えてみました。</p><ul><li>jQuery (87.4KB)</li><li>$.animate()で作れますが、アニメーションのためにわざわざ入れる必要はないと思います。</li><li><a style=\"color:#258fb8\" href=\"http://velocityjs.org/\" target=\"_blank\" rel=\"noopener noreferrer\">Velocity.js</a>&nbsp;(47.5KB)</li><li>jQueryの$.animate()と同じAPIが使えます。jQueryに慣れてる人は良いかもしれない。</li><li><a style=\"color:#258fb8\" href=\"https://greensock.com/gsap/\" target=\"_blank\" rel=\"noopener noreferrer\">GSAP</a>&nbsp;(61.9KB)</li><li>海外でよく使われているらしい。大量のオブジェクトを動かしたいなどより重い/高度な処理をしたいときに向いてそうです。</li><li><a style=\"color:#258fb8\" href=\"https://developer.mozilla.org/ja/docs/Web/API/Web_Animations_API\" target=\"_blank\" rel=\"noopener noreferrer\">Web Animation API</a></li><li>ライブラリではなく、アニメーションの標準仕様です。ただしまだ草案。</li></ul><p>最初はWeb Animation APIを使って、ライブラリなしでイケるならやってみたいなと思い試してみました。<br>かなり直感的に書けるしやりたいこともできて、Polyfillを使えばIE11でも問題なく動作した！のですが、、、<br>自動的にアニメーションを発火させたかったところ、iOSではどこかをタップしないと動き出さなかったりどうにも動作が安定せず・・採用は見送りました😂可能性は感じましたけども!<br>で最終的にファイルサイズや動作の安定性を考えてanime.jsにしました。<br>（いいかもと思ったけどちゃんと調べてないのもある・・<a style=\"color:#258fb8\" href=\"https://github.com/mojs/mojs\" target=\"_blank\" rel=\"noopener noreferrer\">Mo.js</a>&nbsp;/&nbsp;<a style=\"color:#258fb8\" href=\"https://github.com/popmotion/popmotion\" target=\"_blank\" rel=\"noopener noreferrer\">Popmotion</a>&nbsp;/&nbsp;<a style=\"color:#258fb8\" href=\"https://github.com/thednp/kute.js/\" target=\"_blank\" rel=\"noopener noreferrer\">Kute.js</a>）</p><h2 id=\"h4d849f4362\">使い方</h2><p>書き方はとてもシンプルで</p><pre><code>anime({\n  targets: '.hoge',\n  translateX: 250\n});</code></pre><p>とするだけで、指定したクラスの要素を横に移動することができます。<br><a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/#cssSelector\" target=\"_blank\" rel=\"noopener noreferrer\">TARGETS - CSS SELECTOR</a><br><code>targets</code>はNodeListでも良いので、複数要素を一気に動かしたいときは<code>targets: el.querySelectorAll('.hoge')</code>などでもイケます。<br><a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/#domNode\" target=\"_blank\" rel=\"noopener noreferrer\">TARGETS - DOM NODE / NODELIST</a><br>ただ正直この程度だったらCSSだけで十分ですよね。</p><h3 id=\"hd5e98f1c89\">Timeline</h3><p>複数アニメーションを管理したいときは<a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/#timelineBasics\" target=\"_blank\" rel=\"noopener noreferrer\">Timeline</a>という機能が便利です。<br>4つのdiv（四角）が順々に移動するタイムラインを作ってみました。</p><iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2F1dku2378%2Fembedded%2F&display_name=jsFiddle&url=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2F1dku2378%2F&image=https%3A%2F%2Fwww.gravatar.com%2Favatar%2Fa431425883e0e635dd395d98a814918d%3Fs%3D80&key=94335756f04b424b8ce3ce71cbe3de0a&type=text%2Fhtml&schema=jsfiddle\" width=\"600\" height=\"400\" scrolling=\"no\" title=\"jsFiddle embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"></iframe><p><br><span style=\"color:#555555\">まず最初に</span></p><pre><code>const squareAnime = anime.timeline({\n  duration: 800,\n  easing: 'easeInOutElastic',\n  direction: 'alternate',\n  loop: true,\n});</code></pre><p>のようにタイムラインを作ります。 オプションを一括で設定でき、durationやeasingはそれぞれのアニメーションで上書きもできます。<br>各アニメーションは</p><pre><code>squareAnime\n  .add({\n    targets: '.square1',\n    translateY: '400%',\n  })\n  .add({\n    targets: '.square2',\n    translateX: '900%',\n  })</code></pre><p>のように<code>.add</code>で繋げていきます。 タイムラインのパラメータを上書きしたいときは</p><pre><code>.add({\n  targets: '.hoge',\n  easing: 'linear'\n})</code></pre><p>とすればOKです。<br>また単純に連続で実行するだけでなく、同時に実行したり遅延させたりしたいときは<a href=\"https://animejs.com/documentation/#timelineOffsets\" target=\"_blank\" rel=\"noopener noreferrer\">タイムオフセット</a>という機能を使います。&nbsp;<code>.add</code>のオプションとして使用できます。</p><pre><code>.add({\n  targets: '.hoge',\n  translateY: 100,\n  duration: 500,\n})\n.add({\n  targets: '.fuga',\n  translateY: 100,\n}, '-=500')</code></pre><p><code>-=500</code>は前のアニメーションが終了する500ms前に開始するという意味です。 前のアニメーション（<code>.hoge</code>）は500msかけて実行されるので、<code>.hoge</code>と<code>.fuga</code>は同時に実行されることになります。 逆に遅延させたい場合は<code>+=</code>と記述します。</p><h3 id=\"h9be390a8f8\">Callback</h3><p>このアニメーションが終わったらjsを発火させたい、というときのために アニメーションが始まった/終わった/ループした などのタイミングで呼び出される<a href=\"https://animejs.com/documentation/#update\" target=\"_blank\" rel=\"noopener noreferrer\">コールバック</a>が用意されています。<br>先ほどのアニメーションに手を加え、ループのたびにSVGアニメが発動するようにしてみました。</p><iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fj48eq6bg%2Fembedded%2F&display_name=jsFiddle&url=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fj48eq6bg%2F&image=https%3A%2F%2Fwww.gravatar.com%2Favatar%2Fa431425883e0e635dd395d98a814918d%3Fs%3D80&key=94335756f04b424b8ce3ce71cbe3de0a&type=text%2Fhtml&schema=jsfiddle\" width=\"600\" height=\"400\" scrolling=\"no\" title=\"jsFiddle embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"></iframe><p><br>タイムラインに<code>loopComplete()</code>を設定し、ループが終わるたびにアニメーションを動かすjsを呼び出すように設定しました。<br>タイムライン全体が始まったとき/終わったときに動かしたい場合はこれで良いのですが、<code>.add</code>していった各アニメーションが動くタイミングで何かをしたいときもあると思います。 その場合は</p><pre><code>hogeAnimation\n  .add({\n    targets: '.hoge',\n    opacity: 1,\n    begin: function() {\n      console.log('.hoge実行前');\n    },\n    complete: function() {\n      console.log('.hoge実行完了');\n    }\n  })</code></pre><p>のように書くことで実装できます。 サンプルのように他のJSを発動させたり、CSSアニメーションのために<code>will-change</code>を設定しておいて、アニメーションが終わったら<code>auto</code>に戻したりするのに使えます。</p><pre><code>// $hogeが要素だとして、初期スタイルでwill-changeを設定しておく\n$hoge.style.willChange = 'opacity transform';\n\n// アニメーションが済んだらautoに戻しておく\n// ～タイムラインの記述省略～\n.add({\n  targets: $hoge,\n  opacity: 1,\n  scaleY: 1,\n  complete: function() {\n    $hoge.style.willChange = 'auto';\n  }\n})</code></pre><h2 id=\"hcbec2bf0d9\"><br>終わりに</h2><p>タイムラインを使えば直感的かつ簡単にアニメーションを管理できてたのしかったです😁&nbsp;今回は使いませんでしたが、SVGのラインアニメーションやタイムラインの再生/停止などもいじれるので、いろんな活用方法がありそうです。<br>たまに、CSSとJS両方で同じプロパティを指定すると思い通りに動かないことがあったので（durationとかopacityの値とか）、 もしうまくいかなかったら設定はJSだけでやるなど試してみてください。<br>以上です！</p><h2 id=\"h3de35099b3\"><br>参考</h2><p><a href=\"https://animejs.com/documentation/\" target=\"_blank\" rel=\"noopener noreferrer\">Documentation | anime.js</a>&nbsp;<a href=\"https://tr.you84815.space/animejs/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">anime.jsドキュメント翻訳 | anime.js - にほんご。</a>&nbsp;<a href=\"https://ics.media/entry/14973/\" target=\"_blank\" rel=\"noopener noreferrer\">現場で使えるアニメーション系JSライブラリまとめ（2020年版） - GSAP, CreateJS, WebAnimation, Velocityなど - ICS MEDIA</a>&nbsp;<a href=\"https://qiita.com/baby-degu/items/2516bb55e97de612118b\" target=\"_blank\" rel=\"noopener noreferrer\">2019年注目のJavaScriptアニメーションライブラリ11選 - Qiita</a><br></p>","category":{"id":"javascript","createdAt":"2022-03-24T07:10:27.304Z","updatedAt":"2022-03-24T07:10:27.304Z","publishedAt":"2022-03-24T07:10:27.304Z","revisedAt":"2022-03-24T07:10:27.304Z","name":"JavaScript"},"tag":[]},{"id":"31apigdy1nas","createdAt":"2022-03-24T10:06:24.313Z","updatedAt":"2022-03-24T10:07:38.835Z","publishedAt":"2022-02-10T10:06:24.000Z","revisedAt":"2022-03-24T10:07:38.835Z","title":"anime.jsでスムーズスクロール実装","body":"<p>わざわざスムーズスクロールをanime.jsで実装する必要はないのですが、もともとanime.jsを組み込んでいたのでスクロールのために他のライブラリ入れるのはなーと思い実装してみました。<br></p><iframe class=\"embedly-embed\" src=\"https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fk0rxob5d%2Fembedded%2F&display_name=jsFiddle&url=https%3A%2F%2Fjsfiddle.net%2Fwhike_chan%2Fk0rxob5d%2F&image=https%3A%2F%2Fwww.gravatar.com%2Favatar%2Fa431425883e0e635dd395d98a814918d%3Fs%3D80&key=94335756f04b424b8ce3ce71cbe3de0a&type=text%2Fhtml&schema=jsfiddle\" width=\"600\" height=\"400\" scrolling=\"no\" title=\"jsFiddle embed\" frameborder=\"0\" allow=\"autoplay; fullscreen\" allowfullscreen=\"true\"></iframe><p><br>※埋め込みだと高さがいじれなくてスクロールがちゃんと見られないので、動作は右上のEdit in JSFiddleから飛んで見てください・・m(<em> </em>)m<br><br>ページの一番上に移動する分には、scrollTopという箇所に0を設定するだけでいいので楽です。<br>しかし、指定した要素に飛ぶという機能はどうやら無いようで、そこだけ自分で設定するのがちょっと面倒でした。<br>とはいえjQueryいらずで、イージングやdurationの指定がとてもかんたんで便利でした:smile:<br><br>参考<br><a style=\"color:#258fb8\" href=\"https://animejs.com/documentation/\" target=\"_blank\" rel=\"noopener noreferrer\">Documentation | anime.js</a><br><a style=\"color:#258fb8\" href=\"https://github.com/juliangarnier/anime/issues/197\" target=\"_blank\" rel=\"noopener noreferrer\">Scroll document to element? · Issue #197 · juliangarnier/anime</a><br><a style=\"color:#258fb8\" href=\"https://tr.you84815.space/animejs/index.html\" target=\"_blank\" rel=\"noopener noreferrer\">anime.jsドキュメント翻訳 | anime.js - にほんご。</a></p>","category":{"id":"javascript","createdAt":"2022-03-24T07:10:27.304Z","updatedAt":"2022-03-24T07:10:27.304Z","publishedAt":"2022-03-24T07:10:27.304Z","revisedAt":"2022-03-24T07:10:27.304Z","name":"JavaScript"},"tag":[]}],"totalCount":10},"__N_SSG":true}